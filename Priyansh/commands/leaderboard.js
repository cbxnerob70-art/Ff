module.exports.config = {
  name: "leaderboard",
  version: "1.0.0",
  hasPermssion: 0,
  credits: " nerob",
  description: "Display the top users leaderboard",
  commandCategory: "General",
  usages: "leaderboard",
  cooldowns: 5
};

module.exports.run = async ({ api, event, args, global, getText }) => {
  try {
    // ржзрж░рж▓рж╛ржо global.data.allUserID рждрзЗ ржЗржЙржЬрж╛рж░ ржЖржЗржбрж┐ ржЖржЫрзЗ ржПржмржВ global.data.userBanned рждрзЗ ржЗржЙржЬрж╛рж░ ржПрж░ currency ржмрж╛ score ржЖржЫрзЗ
    // ржПржЦрж╛ржирзЗ рждрзЛржорж╛рж░ ржбрж╛ржЯрж╛ржмрзЗржЬ/рж╕рзНржЯрзЛрж░рзЗржЬ ржерзЗржХрзЗ ржЗржЙржЬрж╛рж░ ржбрж╛ржЯрж╛ ржирж┐рзЯрзЗ ржЖрж╕рзЛ
    const userScores = [];

    for (const userID of global.data.allUserID) {
      if (!global.data.userBanned.has(userID)) {
        // ржПржЦрж╛ржирзЗ ржзрж░рзЗ ржирж┐ржЪрзНржЫрж┐ global.data.userBanned.get(userID) ржЗржЙржЬрж╛рж░рзЗрж░ рж╕рзНржХрзЛрж░
        const score = global.data.userBanned.get(userID) || 0;
        userScores.push({ userID, score });
      }
    }

    if (userScores.length === 0) return api.sendMessage("No users found in the leaderboard.", event.threadID);

    // рж╕рзНржХрзЛрж░ ржЕржирзБрж╕рж╛рж░рзЗ рж╕рж╛ржЬрж╛ржирзЛ (descending)
    userScores.sort((a, b) => b.score - a.score);

    // рж╢рзБржзрзБ ржЯржк 100 ржЗржЙржЬрж╛рж░ ржжрзЗржЦрж╛ржмрзЗ
    const topUsers = userScores.slice(0, 100);

    // ржЯржк 5 ржПрж░ ржорзЗрж╕рзЗржЬ рждрзИрж░рзА (aesthetically)
    let message = "ЁЯПЖтЬи Top 5 Leaderboard тЬиЁЯПЖ\n\n";

    for (let i = 0; i < Math.min(5, topUsers.length); i++) {
      let user = topUsers[i];
      let name = global.data.userName.get(user.userID) || `User ${user.userID}`;
      message += `${i + 1}. ЁЯОЙ ${name} тАФ ${user.score} points\n`;
    }

    message += "\nЁЯУК Full leaderboard shows up to top 100 users.\n";

    api.sendMessage(message, event.threadID);
  } catch (error) {
    console.error(error);
    return api.sendMessage("An error occurred while fetching the leaderboard.", event.threadID);
  }
};
